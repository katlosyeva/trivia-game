{

  "info": {
    "title": "Swagger Trivia Game - OpenAPI 3.0",
    "description": "Trivia Game based on Who Wants to be millionaire rules",
    "version": "2.0"
  },
  "openapi": "3.0.3",
  "tags": [
    {
      "name": "game",
      "description": "Everything about game"
    },
    {
      "name": "question",
      "description": "Operations with questions"
    }
  ],
  "paths": {
    "/add_new_game": {
      "post": {
        "tags": [
          "game"
        ],
        "summary": "Create new game",
        "description": "Create new game and get the first question",
        "operationId": "add_game",
        "requestBody": {
          "description": "Create a new game by a new or existing username",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Player"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "player_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "game_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "question": {
                      "$ref": "#/components/schemas/Question"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user_name supplied",
            "content": {
              "application/json": {
                "example": {
                  "message": "User name must be between 1 and 40 characters"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/next_question/{game_id}": {
      "get": {
        "tags": [
          "question"
        ],
        "summary": "Gets the next question",
        "description": "Gets the next question by the provided game_id",
        "operationId": "next_question",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "description": "Gets the question for given game id",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "400": {
            "description": "No more questions",
            "content": {
              "application/json": {
                "example": {
                  "error": "No more questions"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/fifty_fifty/{question_id}": {
      "get": {
        "tags": [
          "question"
        ],
        "summary": "Gets two options for the question",
        "description": "Gets two options for the question instead of four",
        "operationId": "updated_question",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "description": "Returns two options for given question",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "question_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "game_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "question_text": {
                      "type": "string",
                      "example": 1
                    },
                    "answers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Dog",
                        "Cat"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/ask_audience/{question_id}": {
      "get": {
        "tags": [
          "question"
        ],
        "summary": "Gets audience choice proportion",
        "description": "Gets audience choice proportion",
        "operationId": "get_audience_choice",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "description": "Returns audience choice proportion",
            "required": true,
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ],
                      "example": "45, Dog"
                    }
                  },
                  "example": [
                    [
                      50,
                      "Dog"
                    ],
                    [
                      30,
                      "Cat"
                    ],
                    [
                      15,
                      "Parrot"
                    ],
                    [
                      5,
                      "Rat"
                    ]
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "Shows leaderboard",
        "description": "Shows leaderboard",
        "operationId": "show_leaderboard",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    }
                  },
                  "example": [
                    [
                      "Kate",
                      12
                    ],
                    [
                      "Emily",
                      9
                    ],
                    [
                      "Lina",
                      3
                    ]
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/check_answer": {
      "put": {
        "tags": [
          "question"
        ],
        "summary": "Checks if the answer was correct",
        "description": "Checks if the answer was correct",
        "operationId": "check_answer",
        "requestBody": {
          "description": "Sends the player's answer",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "game_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "answer": {
                    "type": "string",
                    "example": "Cat"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correct_answer": {
                      "type": "string",
                      "example": "Dog"
                    },
                    "result": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "right"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "wrong"
                          ]
                        }
                      ]
                    },
                    "score": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not all data supplied",
            "content": {
              "application/json": {
                "example": {
                  "message": "Missing required fields"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Player": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "example": "Kate"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "question_id": {
            "type": "integer",
            "example": 1
          },
          "game_id": {
            "type": "integer",
            "example": 1
          },
          "question_text": {
            "type": "string",
            "example": "What is the most common pet?"
          },
          "answers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Dog",
              "Cat",
              "Parrot",
              "Rat"
            ]
          }
        }
      }
    }
  }
}