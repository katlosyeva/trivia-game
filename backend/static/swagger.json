{
  "swagger": "2.0",
  "info": {
    "title": "Swagger Trivia Game - Swagger 2.0",
    "description": "Trivia Game based on Who Wants to be millionaire rules",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "game",
      "description": "Everything about game"
    },
    {
      "name": "question",
      "description": "Operations with questions"
    }
  ],
  "paths": {
    "/add_new_game": {
      "post": {
        "tags": [
          "game"
        ],
        "summary": "Create new game",
        "description": "Create new game and get the first question",
        "operationId": "add_game",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create a new game by a new or existing username",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GameResponse"
            }
          },
          "400": {
            "description": "Invalid user_name supplied",
            "schema": {
    "type": "object",
    "properties": {
      "message": {
        "type": "string",
        "example": "User name must be between 1 and 40 characters"
      }
    }
  }
},
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/next_question/{game_id}": {
      "get": {
        "tags": [
          "question"
        ],
        "summary": "Gets the next question",
        "description": "Gets the next question by the provided game_id",
        "operationId": "next_question",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "description": "Gets the question for the given game id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Question"
            }
          },
          "400": {
            "description": "No more questions",
            "schema": {
              "$ref": "#/definitions/NoMoreQuestionsError"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/fifty_fifty/{question_id}": {
      "get": {
        "tags": ["question"],
        "summary": "Gets two options for the question",
        "description": "Gets two options for the question instead of four",
        "operationId": "updated_question",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "description": "Returns two options for the given question",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FiftyFiftyResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/ask_audience/{question_id}": {
      "get": {
        "tags": ["question"],
        "summary": "Gets audience choice proportion",
        "description": "Gets audience choice proportion",
        "operationId": "get_audience_choice",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "description": "Returns audience choice proportion",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AudienceChoiceResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/leaderboard/": {
      "get": {
        "tags": ["game"],
        "summary": "Shows leaderboard",
        "description": "Shows leaderboard",
        "operationId": "show_leaderboard",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LeaderboardResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/check_answer": {
      "put": {
        "tags": ["question"],
        "summary": "Checks if the answer was correct",
        "description": "Checks if the answer was correct",
        "operationId": "check_answer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Give answer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerRequest"
            }
          }
        ],

        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnswerResponse"
            }
          },
          "400": {
            "description": "Not all data supplied",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LeaderboardResponse": {
      "type": "array",
      "items": {
        "type": "array",
        "items": [
          { "type": "string" },
          { "type": "integer" }
        ]
      },
      "example": [
        ["Kate", 12],
        ["Emily", 9],
        ["Lina", 3]
      ]
    },
    "AnswerRequest": {
      "type": "object",
      "properties": {
        "question_id": {
          "type": "integer",
          "example": 1
        },
        "game_id": {
          "type": "integer",
          "example": 1
        },
        "answer": {
          "type": "string",
          "example": "Cat"
        }
      }
    },
    "AnswerResponse": {
      "type": "object",
      "properties": {
        "correct_answer": {
          "type": "string",
          "example": "Dog"
        },
        "result": {
          "type": "string",
          "enum": ["right", "wrong"]
        },
        "score": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "ServerError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "BadRequestError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Missing required fields"
        }
      }
    },
    "GameResponse": {
      "type": "object",
      "properties": {
        "player_id": {
          "type": "integer",
          "example": 1
        },
        "game_id": {
          "type": "integer",
          "example": 1
        },
        "question": {
          "$ref": "#/definitions/Question"
        }
      }
    },
    "NoMoreQuestionsError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "No more questions"
        }
      }
    },
    "FiftyFiftyResponse": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["Dog", "Cat"]
        }
      }
    },
    "AudienceChoiceResponse": {
      "type": "object",
      "properties": {
        "choice_proportion": {
          "type": "array",
          "example": [
  [50, "Dog"], [30, "Cat"], [15, "Parrot"], [5, "Rat"]
          ]
        }
      }
    },
    "Player": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string",
          "example": "Kate"
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "question_id": {
          "type": "integer",
          "example": 1
        },
        "game_id": {
          "type": "integer",
          "example": 1
        },
        "question_text": {
          "type": "string",
          "example": "What is the most common pet?"
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Dog",
            "Cat",
            "Parrot",
            "Rat"
          ]
        }
      }
    }
  }
}